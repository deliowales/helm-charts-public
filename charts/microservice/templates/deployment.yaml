apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "microservice.application.name" . }}
  labels:
    {{- include "microservice.labels" . | nindent 4 }}
    {{- if eq .Values.application.oldWorld.enabled true }}
    version: newworld
    {{- end }}
  annotations:
    {{- include "microservice.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "microservice.application.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      {{- if eq .Values.application.oldWorld.enabled true }}
      version: newworld
      {{- end }}
  template:
    metadata:
      annotations:
        {{- include "microservice.annotations" . | nindent 8 }}
        {{- include "microservice.application.vault.annotations" . | nindent 8 }}
      labels:
        {{- include "microservice.labels" . | nindent 8 }}
        {{- if and (eq (include "microservice.cloud.provider" .) "Azure") (eq .Values.azure.identity.enabled true) }}
        aadpodidbinding: {{ .Values.azure.identity.name }}
        {{- end }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if eq .Values.application.oldWorld.enabled true }}
        version: newworld
        {{- end }}
    spec:
      {{- if .Values.deployment.topologySpreadConstraints.enabled -}}
      {{- include "microservice.deployment.topologySpreadConstraints" }}
      {{- end }}
      serviceAccountName: {{ include "microservice.application.name" . }}
      containers:
        - name: {{ include "microservice.application.name" . }}
          image: {{ include "microservice.application.imageURL" . }}
          imagePullPolicy: {{ .Values.application.image.pullPolicy }}
          {{- include "microservice.application.securityContext" . | nindent 10 }}
          env:
            - name: PLATFORM
              value: {{ include "microservice.cloud.provider" . }}
            - name: APP_NAME
              value: {{ .Values.application.name | lower | quote }}
            {{- if eq (include "microservice.cloud.provider" .) "AWS" }}
            - name: AWS_REGION
              value: {{ .Values.cloud.region }}
            {{- end }}
            {{- range .Values.application.env }}
            - name: "{{ .name }}"
              value: "{{ .value }}"
            {{- end }}
          ports:
            - name: http
              containerPort: {{ include "microservice.application.containerPort" . }}

          resources:
            {{- toYaml .Values.application.resources | nindent 12 }}
          # PHP - livenss
          # Node - liveness
          live
          {{- if eq (include "microservice.application.language" .) "node" }}
            {{ toYaml .Values.node.livenessProbe | indent 4 }}
          {{- end }}
          readinessProbe:
            tcpSocket:
              port: {{ include "microservice.application.containerPort" . }}
            initialDelaySeconds: 5
            timeoutSeconds: 1
          volumeMounts:
          {{- if eq (include "microservice.application.language" .) "php" }}
          {{- include "microservice.php.volumeMounts" . | nindent 8 }}
          {{- else if eq (include "microservice.application.language" .) "node" }}
          {{- include "microservice.node.volumeMounts" . | nindent 12 }}
          {{- end }}

        {{- if eq (include "microservice.application.language" .) "php" }}
          {{ include  "microservice.nginx.container" . | nindent 8 }}
        {{- end }}

        {{- if eq (include "microservice.application.language" .) "php" }}
          {{ include  "microservice.logging.container" . | nindent 8 }}
        {{- end }}

      securityContext:
        fsGroup: 1000

      volumes:
      {{- if eq (include "microservice.application.language" .) "php" }}
        {{- include "microservice.php.volumes" . | nindent 8 }}
      {{- else if eq (include "microservice.application.language" .) "node" }}
        {{- include "microservice.node.volumes" . | nindent 8 }}
      {{- end }}
