apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "php.application.name" . }}"
  labels:
    {{- include "php.labels" . | nindent 4 }}
  annotations:
    {{- include "php.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "php.application.name" . }}"
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        {{- include "php.annotations" . | nindent 8 }}
        {{- include "php.application.vault.annotations" . | nindent 8 }}
      labels:
        {{- include "php.labels" . | nindent 8 }}
        {{- if and (eq (include "php.cloud.provider" .) "Azure") (eq .Values.azure.identity.enabled true) }}
        aadpodidbinding: {{ .Values.azure.identity.name }}
        {{- end }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- include "php.deployment.topologySpreadConstraints" . | nindent 6 }}
      {{ if .Values.deployment.nodeSelector.toleration -}}
      nodeSelector:
        {{- include "node.deployment.nodeSelector.toleration" . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "php.application.name" . }}
      containers:
        - name: "{{ include "php.application.name" . }}"
          image: "{{ include "php.application.imageURL" . }}"
          imagePullPolicy: {{ .Values.application.image.pullPolicy }}
          securityContext: {{ include "php.application.securityContext" . | nindent 12 }}
          env:
            - name: PLATFORM
              value: "{{ include "php.cloud.provider" . }}"
            - name: APP_NAME
              value: {{ .Values.application.name | lower | quote }}
            - name: SENTRY_ENABLED
              value: "true"
            - name: SENTRY_TRACES_SAMPLE_RATE
              value: "{{ ternary "0.5" "1" (any (eq .Values.cloud.environment "demo") (eq .Values.cloud.environment "production")) }}"
            - name: SENTRY_PROFILES_SAMPLE_RATE
              value: "1"
            {{- if eq (include "php.cloud.provider" .) "AWS" }}
            - name: AWS_REGION
              value: {{ .Values.cloud.region }}
            {{- end }}
            {{- range .Values.application.env }}
            - name: "{{ .name }}"
              value: "{{ .value }}"
            {{- end }}
          resources:
            {{- toYaml .Values.application.resources | nindent 12 }}
          {{- if .Values.application.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 5
            timeoutSeconds: 1
          {{- end }}
          volumeMounts:
            - name: fpm-pool-config-volume
              mountPath: /usr/local/etc/php-fpm.d/www.conf
              subPath: www.conf
            - name: php-config-volume
              mountPath: /usr/local/etc/php/php.ini
              subPath: php.ini
            - name: shared-files
              mountPath: /var/www/html
            - name: tmp
              mountPath: /tmp
            - name: newrelic-log
              mountPath: /var/log/newrelic/
              {{- if .Values.application.extraVolumes -}}
              {{- include "php.application.extraConfigmapMounts" . | nindent 12 }}
              {{- end }}
          {{- if eq .Values.deployment.nginx.enabled true }}
        - name: nginx
          image: "{{ include "php.deployment.nginx.imageURL" . }}"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          lifecycle:
            postStart:
              exec:
                command: ["sh"]
          ports:
            - name: http
              containerPort: 8080
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
          {{- if .Values.application.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              port: 8080
              path: {{ .Values.application.healthcheck.livenessPath }}
              {{- if (include "php.application.healthcheck.headers" . ) -}}
              {{ include "php.application.healthcheck.headers" .  | nindent 14 }}
              {{- end }}
            initialDelaySeconds: 10
            timeoutSeconds: 5
          {{ end }}
          {{- if .Values.application.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              port: 8080
              path: {{ .Values.application.healthcheck.readinessPath }}
              {{- if (include "php.application.healthcheck.headers" . ) -}}
              {{ include "php.application.healthcheck.headers" .  | nindent 14 }}
              {{- end }}
            initialDelaySeconds: 10
            timeoutSeconds: 5
          {{ end }}
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: shared-files
              mountPath: /var/www/html
            - name: tmp
              mountPath: /tmp
          {{- end }}

      securityContext:
        fsGroup: 1000

      volumes:
        - name: fpm-pool-config-volume
          configMap:
            name: fpm-pool-configmap
        - name: php-config-volume
          configMap:
            name: php-configmap
        - name: nginx-config-volume
          configMap:
            name: nginx-configmap
        - name: shared-files
          emptyDir: { }
        - name: tmp
          emptyDir: { }
        - name: newrelic-log
          emptyDir: { }
        {{- if .Values.application.extraVolumes }}
        {{- include "php.application.extraConfigmapVolumes" . | nindent 8 }}
        {{- end }}
