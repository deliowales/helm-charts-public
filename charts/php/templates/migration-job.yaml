{{ if eq .Values.application.migrations.enabled true }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Values.application.name }}-migrations"
  labels:
    {{- include "php.labels" . | nindent 4 }}
  annotations:
    {{- include "php.annotations" . | nindent 4 }}
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      annotations:
        {{- include "php.annotations" . | nindent 8 }}
        {{- include "php.application.vault.annotations" . | nindent 8 }}
        sidecar.istio.io/inject: "false"
      labels:
        {{- include "php.labels" . | nindent 8 }}
        {{- if and (eq (include "php.cloud.provider" .) "Azure") (eq .Values.azure.identity.enabled true) }}
        aadpodidbinding: {{ .Values.azure.identity.name }}
        {{- end }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name | default (include "php.application.name" .) }}
      containers:
        - name: "{{ include "php.application.name" . }}"
          image: "{{ include "php.application.imageURL" . }}"
          args: ["{{.Values.application.migrations.args }}"]
          env:
            - name: APP_NAME
              value: {{ .Values.application.name | lower | quote }}
            - name: DISABLE_INSTANA
              value: "TRUE"
            - name: PLATFORM
              value: "{{ include "php.cloud.provider" . }}"
             {{- if eq (include "php.cloud.provider" .) "AWS" }}
            - name: AWS_REGION
              value: {{ .Values.cloud.region }}
             {{- end }}
             {{- range .Values.application.env }}
            - name: "{{ .name }}"
              value: "{{ .value }}"
             {{- end }}
          volumeMounts:
            - name: fpm-pool-config-volume
              mountPath: /usr/local/etc/php-fpm.d/www.conf
              subPath: www.conf
            - name: php-config-volume
              mountPath: /usr/local/etc/php/php.ini
              subPath: php.ini
            - name: shared-files
              mountPath: /var/www/html
            - name: tmp
              mountPath: /tmp
            - name: newrelic-log
              mountPath: /var/log/newrelic/
              {{- if .Values.application.extraVolumes -}}
              {{- include "php.application.extraConfigmapMounts" . | nindent 12 }}
              {{- end }}
          securityContext: {{ include "php.application.securityContext" . | nindent 12 }}
          resources:
            {{- toYaml .Values.application.migrations.resources | nindent 12 }}
      restartPolicy: {{ .Values.application.migrations.restartPolicy }}
      volumes:
        - name: fpm-pool-config-volume
          configMap:
            name: fpm-pool-configmap
        - name: php-config-volume
          configMap:
            name: php-configmap
        - name: nginx-config-volume
          configMap:
            name: nginx-configmap
        - name: shared-files
          emptyDir: { }
        - name: tmp
          emptyDir: { }
        - name: newrelic-log
          emptyDir: { }
        {{- if .Values.application.extraVolumes }}
        {{- include "php.application.extraConfigmapVolumes" . | nindent 8 }}
        {{- end }}
  backoffLimit: {{ .Values.application.migrations.backoffLimit }}
  {{- end }}
