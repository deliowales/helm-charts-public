#######################################################################
#                         VALUES FOR PHP CHART
# THESE ARE DEFAULTS AND CAN BE OVERRIDDEN IN THE SERVICE'S VALUES FILE
#######################################################################
application:
  # -- Name of the application e.g. Deals
  name: "php"
  # -- Any args that need to be supplied to the `ENTRYPOINT` command.
  args: []
  extraVolumes: []
  readinessProbe:
    enabled: true
  livenessProbe:
    enabled: true
  healthcheck:
    livenessPath: "/_/system/liveness"
    readinessPath: "/_/system/readiness"
    headers: ""
  # -- Enable CRON. This is only to be used with `Horizon`
  cron:
    enabled: false
    phpConfig:
      maxExecutionTime: 30
  # -- Application environment variables. Currently, most of these should be stored in Vault and defined in Terragrunt.
  env: []
  # Configure container registry details
  image:
    # -- Name of the ECR/ACR repository
    repository: ""
    # -- Image tag to be pulled
    tag: "0.0.0"
    pullPolicy: Always
  # @ignored Application container resources. Please ensure that these are fine-tuned when load-testing
  # has been carried out and a baseline has been defined.
  resources:
    limits:
      cpu:
      memory: ""
    requests:
      cpu: ""
      memory: ""

  migrations:
    enabled: false
    args: "migrations"
    restartPolicy: OnFailure
    backoffLimit: 2
    resources:
      limits:
        cpu: 1
        memory: 1G
      requests:
        cpu: 500m
        memory: 500M

authorizationPolicy:
  enabled: true

# -- IAM Role to allow the application access to AWS resources (e.g. S3, SQS, Lambda) if needed.
aws:
  iam:
    enabled: false
    role: ""
    rolePrefix: ""

azure:
  identity:
    enabled: false
    clientName: ""
    name: ""
    resourceName: ""

# Configure cloud details
cloud:
  # -- **Required**: Cloud Environment. `staging-demo` (aws only), `demo`, `staging-production` (azure only) or `production`.
  environment: "uat"
  # -- **Required**: Cloud Provider. Either `AWS` or `Azure`
  provider: "aws"
  # -- Cloud Region. Only needed for AWS
  region: "eu-west-1"
  # -- **Required**: URL for the Container Registry
  containerRegistryURL: "1234.ecr.com"

cron:
  enabled: false
  args: ""
  schedule: ""
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  concurrencyPolicy: "Forbid"
  vault:
    enabled: true
  restartPolicy: "OnFailure"
  backoffLimit: 1
  resources:
    limits:
      cpu:
      memory: ""
    requests:
      cpu:
      memory: ""

deployment:
  enabled: true
  # Horizontal Pod Autoscaler configuration.
  hpa:
    enabled: true
    # -- Maximum number of replica pods
    maxReplicas: 10
    # -- Minimum number of replica pods
    minReplicas: 3
    # -- Target CPU usage (%)
    targetCPU: 70
    # -- Target Memory usage (Mi). Default is `(request+limit) / 2`. Feel free to overwrite that here if necessary.
    targetMemory: 70
  # Specify what type of node you want this app to be deployed on: ["cpu", "memory"]
  nodeSelector:
    toleration: ""
  # Enables the nginx pod to be created with the deployment
  nginx:
    enabled: true
  # -- Replica count not considering the HPA
  replicaCount: 3
  # -- Configure Topology Spread Constrains.
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints
  topologySpreadConstraints:
    maxSkew: 1
    topologyKey: "kubernetes.io/hostname"
    whenUnsatisfiable: "ScheduleAnyway"
  datadog:
    enabled: false

destinationRule:
  enabled: true

istio:
  tls:
    mode: ISTIO_MUTUAL
  mtls:
    mode: STRICT
  # List of services **allowed** to make requests to the current service.
  principals: []
  # Subsets of endpoints of a service for routing traffic to specific versions of application.
  subsets: []
  portLevelSettings: []
  externalIngress:
    enabled: true
    path: "" # the path to remove e.g. /kong/branding
  virtualService:
    enabled: true
    gateways: []
    hosts: []

job:
  enabled: false
  name: ""
  annotations:
  vault:
    enabled: true
  args: ""
  restartPolicy: "OnFailure"
  backoffLimit: 2
  resources:
    limits:
      cpu:
      memory: ""
    requests:
      cpu:
      memory: ""

# @ignored Configure FluentBit - PHP services only
logging:
  enabled: false
  image:
    repository: fluent-bit
    tag: php-1.9.1
    pullPolicy: Always
  # -- Path to application log. If framework is `laravel`, you must use `laravel.log` instead of `lumen.log`
  logPath: /var/www/html/storage/logs/lumen.log
  multiLine: "On"
  parserPath: /fluent-bit/etc/php-parser.conf
  resources:
    limits:
      cpu: "100m"
      memory: "100Mi"
    requests:
      cpu: "10m"
      memory: "10Mi"

newrelic:
  licenseKey: ""
  ephemeralPods:
    enabled: false

nginx:
  config:
    #    This is nginx default max body size
    clientMaxBodySize: 1M
  image:
    repository: nginx
    tag: 1.21.1-alpine-unprivileged
    pullPolicy: Always
  resources:
    limits:
      cpu: "100m"
      memory: "128Mi"
    requests:
      cpu: "10m"
      memory: "10Mi"
  service:
    type: NodePort
    # -- Port that nginx is listening on
    internalPort: ""

# Pod Disruption Budget. Leave as false unless instructed otherwise.
pdb:
  enabled: false
  minAvailable: 2

peerAuthentication:
  enabled: true

# Configuration options for `php.ini`. Leave blank for default values.
phpConfig:
  maxExecutionTime: 30
  memoryLimit: 128M
  uploadMaxFilesize: 2M
  postMaxSize: 8M
  sessionHandler: ""
  sessionSavePath: ""

scheduler:
  enabled: false

service:
  enabled: true
  externalDNS:
    enabled: false
    host: ""
  port: 80
  type: ClusterIP

serviceAccount:
  enabled: true
  # -- Leave blank to default to the application name
  name: ""

serviceEntry:
  enabled: false
  hosts: []
  location: ""
  ports: []
  ping:
    hosts: []

supervisor:
  enabled: true
  horizon:
    enabled: false
  hpa:
    enabled: false
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 250m
      memory: 250Mi

# -- Vault configuration
vault:
  # -- Environment of the vault. Format: `<< env >>/<< vault name >>
  env: ""
  # -- Role name
  role: ""

nightwatch:
  enabled: false
  image:
    repository: docker.io/laravelphp/nightwatch-agent
    tag: latest
    pullPolicy: Always
  resources:
    limits:
      cpu: "100m"
      memory: "128Mi"
    requests:
      cpu: "50m"
      memory: "64Mi"
